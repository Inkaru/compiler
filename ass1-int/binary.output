Terminals unused in grammar

   NEWL


State 17 conflicts: 1 reduce/reduce
State 26 conflicts: 1 shift/reduce
State 52 conflicts: 12 shift/reduce


Grammar

    0 $accept: block END

    1 chunk: stat
    2      | laststat
    3      | chunk stat
    4      | chunk laststat

    5 block: chunk

    6 stat: varlist EQU explist
    7     | REPEAT block UNTIL exp
    8     | DO block STEND
    9     | IF exp THEN block STEND
   10     | FOR NAME EQU exp COMMA exp DO block STEND
   11     | functioncall
   12     | FUNCTION funcname funcbody

   13 laststat: RETURN explist
   14         | BREAK

   15 exp: NUM
   16    | STRING
   17    | prefixexp
   18    | tableconstructor
   19    | FALSE
   20    | TRUE
   21    | exp PLUS exp
   22    | exp MINUS exp
   23    | exp MULT exp
   24    | exp DIV exp
   25    | exp MOD exp
   26    | exp EXPO exp
   27    | exp INF exp
   28    | exp SUP exp
   29    | exp DBEQU exp
   30    | exp NEQU exp
   31    | exp INFEQ exp
   32    | exp SUPEQ exp
   33    | MINUS exp
   34    | HASH exp

   35 prefixexp: var
   36          | functioncall
   37          | BROPEN exp BRCLOSE

   38 var: NAME
   39    | prefixexp DOT NAME
   40    | prefixexp SQBROPEN exp SQBRCLOSE

   41 varlist: var
   42        | varlist COMMA var

   43 functioncall: prefixexp args

   44 args: STRING
   45     | BROPEN explist BRCLOSE

   46 explist: exp
   47        | explist COMMA exp

   48 tableconstructor: ACOPEN ACCLOSE
   49                 | ACOPEN fieldlist ACCLOSE

   50 fieldlist: field
   51          | fieldlist COMMA field

   52 field: exp

   53 funcname: NAME
   54         | NAME DOT funcname

   55 funcbody: BROPEN parlist BRCLOSE block STEND
   56         | BROPEN BRCLOSE block STEND

   57 parlist: NAME
   58        | parlist COMMA NAME


Terminals, with rules where they appear

END (0) 0
error (256)
NEWL (258)
BROPEN (259) 37 45 55 56
BRCLOSE (260) 37 45 55 56
ACOPEN (261) 48 49
ACCLOSE (262) 48 49
SQBROPEN (263) 40
SQBRCLOSE (264) 40
DOT (265) 39 54
COMMA (266) 10 42 47 51 58
HASH (267) 34
RETURN (268) 13
BREAK (269) 14
REPEAT (270) 7
UNTIL (271) 7
FOR (272) 10
IF (273) 9
THEN (274) 9
DO (275) 8 10
STEND (276) 8 9 10 55 56
FUNCTION (277) 12
FALSE (278) 19
TRUE (279) 20
NUM (280) 15
NAME (281) 10 38 39 53 54 57 58
STRING (282) 16 44
EQU (283) 6 10
INF (284) 27
SUP (285) 28
NEQU (286) 30
INFEQ (287) 31
SUPEQ (288) 32
DBEQU (289) 29
PLUS (290) 21
MINUS (291) 22 33
MULT (292) 23
DIV (293) 24
MOD (294) 25
EXPO (295) 26


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
chunk (42)
    on left: 1 2 3 4, on right: 3 4 5
block (43)
    on left: 5, on right: 0 7 8 9 10 55 56
stat (44)
    on left: 6 7 8 9 10 11 12, on right: 1 3
laststat (45)
    on left: 13 14, on right: 2 4
exp (46)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
    33 34, on right: 7 9 10 21 22 23 24 25 26 27 28 29 30 31 32 33
    34 37 40 46 47 52
prefixexp (47)
    on left: 35 36 37, on right: 17 39 40 43
var (48)
    on left: 38 39 40, on right: 35 41 42
varlist (49)
    on left: 41 42, on right: 6 42
functioncall (50)
    on left: 43, on right: 11 36
args (51)
    on left: 44 45, on right: 43
explist (52)
    on left: 46 47, on right: 6 13 45 47
tableconstructor (53)
    on left: 48 49, on right: 18
fieldlist (54)
    on left: 50 51, on right: 49 51
field (55)
    on left: 52, on right: 50 51
funcname (56)
    on left: 53 54, on right: 12 54
funcbody (57)
    on left: 55 56, on right: 12
parlist (58)
    on left: 57 58, on right: 55 58


State 0

    0 $accept: . block END

    BROPEN    shift, and go to state 1
    RETURN    shift, and go to state 2
    BREAK     shift, and go to state 3
    REPEAT    shift, and go to state 4
    FOR       shift, and go to state 5
    IF        shift, and go to state 6
    DO        shift, and go to state 7
    FUNCTION  shift, and go to state 8
    NAME      shift, and go to state 9

    chunk         go to state 10
    block         go to state 11
    stat          go to state 12
    laststat      go to state 13
    prefixexp     go to state 14
    var           go to state 15
    varlist       go to state 16
    functioncall  go to state 17


State 1

   37 prefixexp: BROPEN . exp BRCLOSE

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 25
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 2

   13 laststat: RETURN . explist

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 30
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    explist           go to state 31
    tableconstructor  go to state 29


State 3

   14 laststat: BREAK .

    $default  reduce using rule 14 (laststat)


State 4

    7 stat: REPEAT . block UNTIL exp

    BROPEN    shift, and go to state 1
    RETURN    shift, and go to state 2
    BREAK     shift, and go to state 3
    REPEAT    shift, and go to state 4
    FOR       shift, and go to state 5
    IF        shift, and go to state 6
    DO        shift, and go to state 7
    FUNCTION  shift, and go to state 8
    NAME      shift, and go to state 9

    chunk         go to state 10
    block         go to state 32
    stat          go to state 12
    laststat      go to state 13
    prefixexp     go to state 14
    var           go to state 15
    varlist       go to state 16
    functioncall  go to state 17


State 5

   10 stat: FOR . NAME EQU exp COMMA exp DO block STEND

    NAME  shift, and go to state 33


State 6

    9 stat: IF . exp THEN block STEND

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 34
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 7

    8 stat: DO . block STEND

    BROPEN    shift, and go to state 1
    RETURN    shift, and go to state 2
    BREAK     shift, and go to state 3
    REPEAT    shift, and go to state 4
    FOR       shift, and go to state 5
    IF        shift, and go to state 6
    DO        shift, and go to state 7
    FUNCTION  shift, and go to state 8
    NAME      shift, and go to state 9

    chunk         go to state 10
    block         go to state 35
    stat          go to state 12
    laststat      go to state 13
    prefixexp     go to state 14
    var           go to state 15
    varlist       go to state 16
    functioncall  go to state 17


State 8

   12 stat: FUNCTION . funcname funcbody

    NAME  shift, and go to state 36

    funcname  go to state 37


State 9

   38 var: NAME .

    $default  reduce using rule 38 (var)


State 10

    3 chunk: chunk . stat
    4      | chunk . laststat
    5 block: chunk .

    BROPEN    shift, and go to state 1
    RETURN    shift, and go to state 2
    BREAK     shift, and go to state 3
    REPEAT    shift, and go to state 4
    FOR       shift, and go to state 5
    IF        shift, and go to state 6
    DO        shift, and go to state 7
    FUNCTION  shift, and go to state 8
    NAME      shift, and go to state 9

    $default  reduce using rule 5 (block)

    stat          go to state 38
    laststat      go to state 39
    prefixexp     go to state 14
    var           go to state 15
    varlist       go to state 16
    functioncall  go to state 17


State 11

    0 $accept: block . END

    END  shift, and go to state 40


State 12

    1 chunk: stat .

    $default  reduce using rule 1 (chunk)


State 13

    2 chunk: laststat .

    $default  reduce using rule 2 (chunk)


State 14

   39 var: prefixexp . DOT NAME
   40    | prefixexp . SQBROPEN exp SQBRCLOSE
   43 functioncall: prefixexp . args

    BROPEN    shift, and go to state 41
    SQBROPEN  shift, and go to state 42
    DOT       shift, and go to state 43
    STRING    shift, and go to state 44

    args  go to state 45


State 15

   35 prefixexp: var .
   41 varlist: var .

    COMMA     reduce using rule 41 (varlist)
    EQU       reduce using rule 41 (varlist)
    $default  reduce using rule 35 (prefixexp)


State 16

    6 stat: varlist . EQU explist
   42 varlist: varlist . COMMA var

    COMMA  shift, and go to state 46
    EQU    shift, and go to state 47


State 17

   11 stat: functioncall .
   36 prefixexp: functioncall .

    BROPEN    reduce using rule 11 (stat)
    BROPEN    [reduce using rule 36 (prefixexp)]
    SQBROPEN  reduce using rule 36 (prefixexp)
    DOT       reduce using rule 36 (prefixexp)
    STRING    reduce using rule 36 (prefixexp)
    $default  reduce using rule 11 (stat)


State 18

   48 tableconstructor: ACOPEN . ACCLOSE
   49                 | ACOPEN . fieldlist ACCLOSE

    BROPEN   shift, and go to state 1
    ACOPEN   shift, and go to state 18
    ACCLOSE  shift, and go to state 48
    HASH     shift, and go to state 19
    FALSE    shift, and go to state 20
    TRUE     shift, and go to state 21
    NUM      shift, and go to state 22
    NAME     shift, and go to state 9
    STRING   shift, and go to state 23
    MINUS    shift, and go to state 24

    exp               go to state 49
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29
    fieldlist         go to state 50
    field             go to state 51


State 19

   34 exp: HASH . exp

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 52
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 20

   19 exp: FALSE .

    $default  reduce using rule 19 (exp)


State 21

   20 exp: TRUE .

    $default  reduce using rule 20 (exp)


State 22

   15 exp: NUM .

    $default  reduce using rule 15 (exp)


State 23

   16 exp: STRING .

    $default  reduce using rule 16 (exp)


State 24

   33 exp: MINUS . exp

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 53
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 25

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp
   37 prefixexp: BROPEN exp . BRCLOSE

    BRCLOSE  shift, and go to state 54
    INF      shift, and go to state 55
    SUP      shift, and go to state 56
    NEQU     shift, and go to state 57
    INFEQ    shift, and go to state 58
    SUPEQ    shift, and go to state 59
    DBEQU    shift, and go to state 60
    PLUS     shift, and go to state 61
    MINUS    shift, and go to state 62
    MULT     shift, and go to state 63
    DIV      shift, and go to state 64
    MOD      shift, and go to state 65
    EXPO     shift, and go to state 66


State 26

   17 exp: prefixexp .
   39 var: prefixexp . DOT NAME
   40    | prefixexp . SQBROPEN exp SQBRCLOSE
   43 functioncall: prefixexp . args

    BROPEN    shift, and go to state 41
    SQBROPEN  shift, and go to state 42
    DOT       shift, and go to state 43
    STRING    shift, and go to state 44

    BROPEN    [reduce using rule 17 (exp)]
    $default  reduce using rule 17 (exp)

    args  go to state 45


State 27

   35 prefixexp: var .

    $default  reduce using rule 35 (prefixexp)


State 28

   36 prefixexp: functioncall .

    $default  reduce using rule 36 (prefixexp)


State 29

   18 exp: tableconstructor .

    $default  reduce using rule 18 (exp)


State 30

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp
   46 explist: exp .

    INF    shift, and go to state 55
    SUP    shift, and go to state 56
    NEQU   shift, and go to state 57
    INFEQ  shift, and go to state 58
    SUPEQ  shift, and go to state 59
    DBEQU  shift, and go to state 60
    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MULT   shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65
    EXPO   shift, and go to state 66

    $default  reduce using rule 46 (explist)


State 31

   13 laststat: RETURN explist .
   47 explist: explist . COMMA exp

    COMMA  shift, and go to state 67

    $default  reduce using rule 13 (laststat)


State 32

    7 stat: REPEAT block . UNTIL exp

    UNTIL  shift, and go to state 68


State 33

   10 stat: FOR NAME . EQU exp COMMA exp DO block STEND

    EQU  shift, and go to state 69


State 34

    9 stat: IF exp . THEN block STEND
   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp

    THEN   shift, and go to state 70
    INF    shift, and go to state 55
    SUP    shift, and go to state 56
    NEQU   shift, and go to state 57
    INFEQ  shift, and go to state 58
    SUPEQ  shift, and go to state 59
    DBEQU  shift, and go to state 60
    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MULT   shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65
    EXPO   shift, and go to state 66


State 35

    8 stat: DO block . STEND

    STEND  shift, and go to state 71


State 36

   53 funcname: NAME .
   54         | NAME . DOT funcname

    DOT  shift, and go to state 72

    $default  reduce using rule 53 (funcname)


State 37

   12 stat: FUNCTION funcname . funcbody

    BROPEN  shift, and go to state 73

    funcbody  go to state 74


State 38

    3 chunk: chunk stat .

    $default  reduce using rule 3 (chunk)


State 39

    4 chunk: chunk laststat .

    $default  reduce using rule 4 (chunk)


State 40

    0 $accept: block END .

    $default  accept


State 41

   45 args: BROPEN . explist BRCLOSE

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 30
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    explist           go to state 75
    tableconstructor  go to state 29


State 42

   40 var: prefixexp SQBROPEN . exp SQBRCLOSE

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 76
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 43

   39 var: prefixexp DOT . NAME

    NAME  shift, and go to state 77


State 44

   44 args: STRING .

    $default  reduce using rule 44 (args)


State 45

   43 functioncall: prefixexp args .

    $default  reduce using rule 43 (functioncall)


State 46

   42 varlist: varlist COMMA . var

    BROPEN  shift, and go to state 1
    NAME    shift, and go to state 9

    prefixexp     go to state 14
    var           go to state 78
    functioncall  go to state 28


State 47

    6 stat: varlist EQU . explist

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 30
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    explist           go to state 79
    tableconstructor  go to state 29


State 48

   48 tableconstructor: ACOPEN ACCLOSE .

    $default  reduce using rule 48 (tableconstructor)


State 49

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp
   52 field: exp .

    INF    shift, and go to state 55
    SUP    shift, and go to state 56
    NEQU   shift, and go to state 57
    INFEQ  shift, and go to state 58
    SUPEQ  shift, and go to state 59
    DBEQU  shift, and go to state 60
    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MULT   shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65
    EXPO   shift, and go to state 66

    $default  reduce using rule 52 (field)


State 50

   49 tableconstructor: ACOPEN fieldlist . ACCLOSE
   51 fieldlist: fieldlist . COMMA field

    ACCLOSE  shift, and go to state 80
    COMMA    shift, and go to state 81


State 51

   50 fieldlist: field .

    $default  reduce using rule 50 (fieldlist)


State 52

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp
   34    | HASH exp .

    INF    shift, and go to state 55
    SUP    shift, and go to state 56
    NEQU   shift, and go to state 57
    INFEQ  shift, and go to state 58
    SUPEQ  shift, and go to state 59
    DBEQU  shift, and go to state 60
    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MULT   shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65
    EXPO   shift, and go to state 66

    INF       [reduce using rule 34 (exp)]
    SUP       [reduce using rule 34 (exp)]
    NEQU      [reduce using rule 34 (exp)]
    INFEQ     [reduce using rule 34 (exp)]
    SUPEQ     [reduce using rule 34 (exp)]
    DBEQU     [reduce using rule 34 (exp)]
    PLUS      [reduce using rule 34 (exp)]
    MINUS     [reduce using rule 34 (exp)]
    MULT      [reduce using rule 34 (exp)]
    DIV       [reduce using rule 34 (exp)]
    MOD       [reduce using rule 34 (exp)]
    EXPO      [reduce using rule 34 (exp)]
    $default  reduce using rule 34 (exp)


State 53

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp
   33    | MINUS exp .

    MULT  shift, and go to state 63
    DIV   shift, and go to state 64
    MOD   shift, and go to state 65
    EXPO  shift, and go to state 66

    $default  reduce using rule 33 (exp)


State 54

   37 prefixexp: BROPEN exp BRCLOSE .

    $default  reduce using rule 37 (prefixexp)


State 55

   27 exp: exp INF . exp

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 82
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 56

   28 exp: exp SUP . exp

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 83
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 57

   30 exp: exp NEQU . exp

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 84
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 58

   31 exp: exp INFEQ . exp

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 85
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 59

   32 exp: exp SUPEQ . exp

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 86
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 60

   29 exp: exp DBEQU . exp

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 87
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 61

   21 exp: exp PLUS . exp

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 88
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 62

   22 exp: exp MINUS . exp

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 89
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 63

   23 exp: exp MULT . exp

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 90
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 64

   24 exp: exp DIV . exp

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 91
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 65

   25 exp: exp MOD . exp

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 92
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 66

   26 exp: exp EXPO . exp

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 93
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 67

   47 explist: explist COMMA . exp

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 94
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 68

    7 stat: REPEAT block UNTIL . exp

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 95
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 69

   10 stat: FOR NAME EQU . exp COMMA exp DO block STEND

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 96
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 70

    9 stat: IF exp THEN . block STEND

    BROPEN    shift, and go to state 1
    RETURN    shift, and go to state 2
    BREAK     shift, and go to state 3
    REPEAT    shift, and go to state 4
    FOR       shift, and go to state 5
    IF        shift, and go to state 6
    DO        shift, and go to state 7
    FUNCTION  shift, and go to state 8
    NAME      shift, and go to state 9

    chunk         go to state 10
    block         go to state 97
    stat          go to state 12
    laststat      go to state 13
    prefixexp     go to state 14
    var           go to state 15
    varlist       go to state 16
    functioncall  go to state 17


State 71

    8 stat: DO block STEND .

    $default  reduce using rule 8 (stat)


State 72

   54 funcname: NAME DOT . funcname

    NAME  shift, and go to state 36

    funcname  go to state 98


State 73

   55 funcbody: BROPEN . parlist BRCLOSE block STEND
   56         | BROPEN . BRCLOSE block STEND

    BRCLOSE  shift, and go to state 99
    NAME     shift, and go to state 100

    parlist  go to state 101


State 74

   12 stat: FUNCTION funcname funcbody .

    $default  reduce using rule 12 (stat)


State 75

   45 args: BROPEN explist . BRCLOSE
   47 explist: explist . COMMA exp

    BRCLOSE  shift, and go to state 102
    COMMA    shift, and go to state 67


State 76

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp
   40 var: prefixexp SQBROPEN exp . SQBRCLOSE

    SQBRCLOSE  shift, and go to state 103
    INF        shift, and go to state 55
    SUP        shift, and go to state 56
    NEQU       shift, and go to state 57
    INFEQ      shift, and go to state 58
    SUPEQ      shift, and go to state 59
    DBEQU      shift, and go to state 60
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62
    MULT       shift, and go to state 63
    DIV        shift, and go to state 64
    MOD        shift, and go to state 65
    EXPO       shift, and go to state 66


State 77

   39 var: prefixexp DOT NAME .

    $default  reduce using rule 39 (var)


State 78

   35 prefixexp: var .
   42 varlist: varlist COMMA var .

    COMMA     reduce using rule 42 (varlist)
    EQU       reduce using rule 42 (varlist)
    $default  reduce using rule 35 (prefixexp)


State 79

    6 stat: varlist EQU explist .
   47 explist: explist . COMMA exp

    COMMA  shift, and go to state 67

    $default  reduce using rule 6 (stat)


State 80

   49 tableconstructor: ACOPEN fieldlist ACCLOSE .

    $default  reduce using rule 49 (tableconstructor)


State 81

   51 fieldlist: fieldlist COMMA . field

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 49
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29
    field             go to state 104


State 82

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   27    | exp INF exp .
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MULT   shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65
    EXPO   shift, and go to state 66

    $default  reduce using rule 27 (exp)


State 83

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   28    | exp SUP exp .
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MULT   shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65
    EXPO   shift, and go to state 66

    $default  reduce using rule 28 (exp)


State 84

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   30    | exp NEQU exp .
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MULT   shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65
    EXPO   shift, and go to state 66

    $default  reduce using rule 30 (exp)


State 85

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   31    | exp INFEQ exp .
   32    | exp . SUPEQ exp

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MULT   shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65
    EXPO   shift, and go to state 66

    $default  reduce using rule 31 (exp)


State 86

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp
   32    | exp SUPEQ exp .

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MULT   shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65
    EXPO   shift, and go to state 66

    $default  reduce using rule 32 (exp)


State 87

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   29    | exp DBEQU exp .
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MULT   shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65
    EXPO   shift, and go to state 66

    $default  reduce using rule 29 (exp)


State 88

   21 exp: exp . PLUS exp
   21    | exp PLUS exp .
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp

    MULT  shift, and go to state 63
    DIV   shift, and go to state 64
    MOD   shift, and go to state 65
    EXPO  shift, and go to state 66

    $default  reduce using rule 21 (exp)


State 89

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   22    | exp MINUS exp .
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp

    MULT  shift, and go to state 63
    DIV   shift, and go to state 64
    MOD   shift, and go to state 65
    EXPO  shift, and go to state 66

    $default  reduce using rule 22 (exp)


State 90

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   23    | exp MULT exp .
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp

    EXPO  shift, and go to state 66

    $default  reduce using rule 23 (exp)


State 91

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   24    | exp DIV exp .
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp

    EXPO  shift, and go to state 66

    $default  reduce using rule 24 (exp)


State 92

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   25    | exp MOD exp .
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp

    EXPO  shift, and go to state 66

    $default  reduce using rule 25 (exp)


State 93

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   26    | exp EXPO exp .
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp

    EXPO  shift, and go to state 66

    $default  reduce using rule 26 (exp)


State 94

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp
   47 explist: explist COMMA exp .

    INF    shift, and go to state 55
    SUP    shift, and go to state 56
    NEQU   shift, and go to state 57
    INFEQ  shift, and go to state 58
    SUPEQ  shift, and go to state 59
    DBEQU  shift, and go to state 60
    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MULT   shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65
    EXPO   shift, and go to state 66

    $default  reduce using rule 47 (explist)


State 95

    7 stat: REPEAT block UNTIL exp .
   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp

    INF    shift, and go to state 55
    SUP    shift, and go to state 56
    NEQU   shift, and go to state 57
    INFEQ  shift, and go to state 58
    SUPEQ  shift, and go to state 59
    DBEQU  shift, and go to state 60
    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MULT   shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65
    EXPO   shift, and go to state 66

    $default  reduce using rule 7 (stat)


State 96

   10 stat: FOR NAME EQU exp . COMMA exp DO block STEND
   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp

    COMMA  shift, and go to state 105
    INF    shift, and go to state 55
    SUP    shift, and go to state 56
    NEQU   shift, and go to state 57
    INFEQ  shift, and go to state 58
    SUPEQ  shift, and go to state 59
    DBEQU  shift, and go to state 60
    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MULT   shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65
    EXPO   shift, and go to state 66


State 97

    9 stat: IF exp THEN block . STEND

    STEND  shift, and go to state 106


State 98

   54 funcname: NAME DOT funcname .

    $default  reduce using rule 54 (funcname)


State 99

   56 funcbody: BROPEN BRCLOSE . block STEND

    BROPEN    shift, and go to state 1
    RETURN    shift, and go to state 2
    BREAK     shift, and go to state 3
    REPEAT    shift, and go to state 4
    FOR       shift, and go to state 5
    IF        shift, and go to state 6
    DO        shift, and go to state 7
    FUNCTION  shift, and go to state 8
    NAME      shift, and go to state 9

    chunk         go to state 10
    block         go to state 107
    stat          go to state 12
    laststat      go to state 13
    prefixexp     go to state 14
    var           go to state 15
    varlist       go to state 16
    functioncall  go to state 17


State 100

   57 parlist: NAME .

    $default  reduce using rule 57 (parlist)


State 101

   55 funcbody: BROPEN parlist . BRCLOSE block STEND
   58 parlist: parlist . COMMA NAME

    BRCLOSE  shift, and go to state 108
    COMMA    shift, and go to state 109


State 102

   45 args: BROPEN explist BRCLOSE .

    $default  reduce using rule 45 (args)


State 103

   40 var: prefixexp SQBROPEN exp SQBRCLOSE .

    $default  reduce using rule 40 (var)


State 104

   51 fieldlist: fieldlist COMMA field .

    $default  reduce using rule 51 (fieldlist)


State 105

   10 stat: FOR NAME EQU exp COMMA . exp DO block STEND

    BROPEN  shift, and go to state 1
    ACOPEN  shift, and go to state 18
    HASH    shift, and go to state 19
    FALSE   shift, and go to state 20
    TRUE    shift, and go to state 21
    NUM     shift, and go to state 22
    NAME    shift, and go to state 9
    STRING  shift, and go to state 23
    MINUS   shift, and go to state 24

    exp               go to state 110
    prefixexp         go to state 26
    var               go to state 27
    functioncall      go to state 28
    tableconstructor  go to state 29


State 106

    9 stat: IF exp THEN block STEND .

    $default  reduce using rule 9 (stat)


State 107

   56 funcbody: BROPEN BRCLOSE block . STEND

    STEND  shift, and go to state 111


State 108

   55 funcbody: BROPEN parlist BRCLOSE . block STEND

    BROPEN    shift, and go to state 1
    RETURN    shift, and go to state 2
    BREAK     shift, and go to state 3
    REPEAT    shift, and go to state 4
    FOR       shift, and go to state 5
    IF        shift, and go to state 6
    DO        shift, and go to state 7
    FUNCTION  shift, and go to state 8
    NAME      shift, and go to state 9

    chunk         go to state 10
    block         go to state 112
    stat          go to state 12
    laststat      go to state 13
    prefixexp     go to state 14
    var           go to state 15
    varlist       go to state 16
    functioncall  go to state 17


State 109

   58 parlist: parlist COMMA . NAME

    NAME  shift, and go to state 113


State 110

   10 stat: FOR NAME EQU exp COMMA exp . DO block STEND
   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . MULT exp
   24    | exp . DIV exp
   25    | exp . MOD exp
   26    | exp . EXPO exp
   27    | exp . INF exp
   28    | exp . SUP exp
   29    | exp . DBEQU exp
   30    | exp . NEQU exp
   31    | exp . INFEQ exp
   32    | exp . SUPEQ exp

    DO     shift, and go to state 114
    INF    shift, and go to state 55
    SUP    shift, and go to state 56
    NEQU   shift, and go to state 57
    INFEQ  shift, and go to state 58
    SUPEQ  shift, and go to state 59
    DBEQU  shift, and go to state 60
    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MULT   shift, and go to state 63
    DIV    shift, and go to state 64
    MOD    shift, and go to state 65
    EXPO   shift, and go to state 66


State 111

   56 funcbody: BROPEN BRCLOSE block STEND .

    $default  reduce using rule 56 (funcbody)


State 112

   55 funcbody: BROPEN parlist BRCLOSE block . STEND

    STEND  shift, and go to state 115


State 113

   58 parlist: parlist COMMA NAME .

    $default  reduce using rule 58 (parlist)


State 114

   10 stat: FOR NAME EQU exp COMMA exp DO . block STEND

    BROPEN    shift, and go to state 1
    RETURN    shift, and go to state 2
    BREAK     shift, and go to state 3
    REPEAT    shift, and go to state 4
    FOR       shift, and go to state 5
    IF        shift, and go to state 6
    DO        shift, and go to state 7
    FUNCTION  shift, and go to state 8
    NAME      shift, and go to state 9

    chunk         go to state 10
    block         go to state 116
    stat          go to state 12
    laststat      go to state 13
    prefixexp     go to state 14
    var           go to state 15
    varlist       go to state 16
    functioncall  go to state 17


State 115

   55 funcbody: BROPEN parlist BRCLOSE block STEND .

    $default  reduce using rule 55 (funcbody)


State 116

   10 stat: FOR NAME EQU exp COMMA exp DO block . STEND

    STEND  shift, and go to state 117


State 117

   10 stat: FOR NAME EQU exp COMMA exp DO block STEND .

    $default  reduce using rule 10 (stat)
